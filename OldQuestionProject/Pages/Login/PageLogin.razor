@page "/Login"
@inject AppDBContext _db
@inject IJSRuntime JSRuntime
@inject SweetAlertService Swal
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager

<style>
    body {
        background-image: url('/Image/tutionPhoto.jpg');
        background-size: cover;
    }
</style>

<br />
<br />
<br />
<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h2 class="card-title">Login</h2>
                    <form method="post">
                        <div class="form-group">
                            <label for="username">Username</label>
                            <input type="text" class="form-control" id="username" name="username" required @bind="User.UserName">
                        </div>
                        <div class="form-group">
                            <label for="password">Password</label>
                            <input type="password" class="form-control" id="password" name="password" required @bind="User.Password">
                        </div>
                        <br />
                        <button type="button" class="btn btn-primary" @onclick="Login">Login</button>
                        <a href="/CreateUser" target="_blank">Create User</a>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    public string? ConfirmPassword { get; set; }
    UsersModel User = new();

    private async Task Login()
    {
        List<UsersModel> checkUser = _db.User.Where(x => x.UserName == User.UserName && x.Password == User.Password).ToList();

        if (checkUser.Count > 0)
        {
            await JSRuntime.InvokeVoidAsync("Swal.fire", "Login Successfully!", "", "success");
            NavigationManager.NavigateTo("/Menu");
        }
        else
        {
            await JSRuntime.InvokeVoidAsync("Swal.fire", "Please check username and password!", "", "error");
        }
    }
}
